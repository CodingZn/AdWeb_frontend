@startuml Game
class Game {
  +sceneManager: SceneManager
  +objectManager: ObjectManager
  +perspectiveManager: PerspectiveManager
  +controlManager: ControlManager
}

class SceneManager {
  +add(renderable)
  +switchScene(sceneName, { background, ambient, ... })
  +switchCamera(perspectiveType, { x, y, z, targetX, targetY, targetZ })
}

class ObjectManager {
  +assetManager
  +get(name): Renderable
}

class AssetManager {
  +get(urls): Promise<any> | Promise<any[]>
}

class PerspectiveManager {
  +getter camera
  +switch(type, params)
}

class ControlManager {
  +on(camera)
  +off()
}

abstract class Renderable {
  +object
  +update({ x, y, z, color, width, height, depth, transform, ... })
  +transform({ scale, rotateX, rotateY, rotateZ, tanslateX, ... })
}

AssetManager --o ObjectManager
Renderable --o ObjectManager
ObjectManager --o Game
SceneManager --o Game
PerspectiveManager --o Game
ControlManager --o Game
